# Copyright 2021 Red Hat, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: v1
kind: Template
metadata:
  name: ccx-insights-content-service
objects:

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: ccx-insights-content
    annotations:
      ignore-check.kube-linter.io/minimum-three-replicas: "This app doesn't have that much traffic"
  spec:
    envName: ${ENV_NAME}
    testing:
      iqePlugin: ccx
    deployments:
      - name: service
        minReplicas: ${{MIN_REPLICAS}}
        webServices:
          public:
            enabled: false
          private:
            enabled: true
          metrics:
            enabled: true
        podSpec:
          env:
            - name: INSIGHTS_CONTENT_SERVICE__SERVER__ADDRESS
              value: ':10000'
            - name: INSIGHTS_CONTENT_SERVICE__SERVER__API_PREFIX
              value: ${ICS_API_PREFIX}
            - name: INSIGHTS_CONTENT_SERVICE__SERVER__API_SPEC_FILE
              value: /openapi/openapi.json
            - name: INSIGHTS_CONTENT_SERVICE__GROUPS__PATH
              value: /groups/groups_config.yaml
            - name: INSIGHTS_CONTENT_SERVICE__LOGGING__LOGGING_TO_CLOUD_WATCH_ENABLED
              value: ${LOGGING_TO_CLOUD_WATCH_ENABLED}
            - name: INSIGHTS_CONTENT_SERVICE__CLOUDWATCH__DEBUG
              value: ${CLOUDWATCH_DEBUG}
            - name: INSIGHTS_CONTENT_SERVICE__CLOUDWATCH__STREAM_NAME
              value: ${ICS_LOG_STREAM}
            - name: INSIGHTS_CONTENT_SERVICE__CLOUDWATCH__CREATE_STREAM_IF_NOT_EXISTS
              value: ${CREATE_STREAM_IF_NOT_EXISTS}
            - name: INSIGHTS_CONTENT_SERVICE__CLOUDWATCH__AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_region
                  optional: true
            - name: INSIGHTS_CONTENT_SERVICE__CLOUDWATCH__LOG_GROUP
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: log_group_name
                  optional: true
            - name: INSIGHTS_CONTENT_SERVICE__CLOUDWATCH__AWS_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_access_key_id
                  optional: true
            - name: INSIGHTS_CONTENT_SERVICE__CLOUDWATCH__AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_secret_access_key
                  optional: true
            - name: INSIGHTS_CONTENT_SERVICE__LOGGING_TO_SENTRY_ENABLED
              value: ${SENTRY_ENABLED}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  key: dsn
                  name: insights-content-service-dsn
                  optional: true
            - name: SENTRY_ENVIRONMENT
              value: ${ENV_NAME}
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: ${ICS_API_PREFIX}openapi.json
              port: 10000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: ${ICS_API_PREFIX}openapi.json
              port: 10000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
            requests:
              cpu: "${CPU_REQUEST}"
              memory: "${MEMORY_REQUEST}"

- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      prometheus.io/path: ${ICS_API_PREFIX}metrics
      prometheus.io/port: "10000"
      prometheus.io/scheme: http
      prometheus.io/scrape: "true"
    name: ccx-insights-content-service-prometheus-exporter
    labels:
      app: ccx-insights-content-service
  spec:
    ports:
      - name: web
        port: 10000
        protocol: TCP
        targetPort: 10000
    selector:
      app: ccx-insights-content
    type: ClusterIP

parameters:
- description: Image name
  name: IMAGE
  value: quay.io/cloudservices/ccx-insights-content-service
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: "true"
- description: ClowdEnv Name
  name: ENV_NAME
  required: true
- description: Minimum number of pods to use when autoscaling is enabled
  name: MIN_REPLICAS
  value: '1'
- description: Minimum number of pods to use when autoscaling is enabled
  name: MAX_REPLICAS
  value: '1'
- name: CPU_REQUEST
  value: '100m'
- name: CPU_LIMIT
  value: '250m'
- name: MEMORY_REQUEST
  value: '200Mi'
- name: MEMORY_LIMIT
  value: '400Mi'
- name: ICS_API_PREFIX
  required: true
  value: /api/v1/
- name: LOGGING_TO_CLOUD_WATCH_ENABLED
  value: "true"
  required: true
- name: CLOUDWATCH_DEBUG
  value: "false"
  required: true
- name: ICS_LOG_STREAM
  value: $HOSTNAME
- name: CREATE_STREAM_IF_NOT_EXISTS
  value: "true"
- name: REPLICAS
  description: The number of replicas to use in the deployment
  value: "1"
- name: SENTRY_ENABLED
  value: "false"