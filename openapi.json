{
  "openapi": "3.0.0",
  "info": {
    "title": "Insights Content Service",
    "description": "Insights Content Service",
    "version": "1.0.0"
  },
  "paths": { 
    "/openapi.json": {
      "get": {
        "summary": "Returns the OpenAPI specification JSON.",
        "description": "The OpenAPI specification of this REST API service that is represented in formatted and human-readable JSON is available under this endpoint.",
        "operationId": "getOpenApi",
        "responses": {
          "200": {
            "description": "A JSON containing the OpenAPI specification for this service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "openapi": {
                      "type": "string"
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "paths": {
                      "type": "object",
                      "description": "Available paths and their descriptions."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "summary": "Returns a list of groups.",
        "description": "List of all groups represented as an array of objects is returned in a response",
        "operationId": "getGroups",
        "responses": {
          "200": {
            "description": "A JSON array of groups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content": {
      "get": {
        "summary": "Returns static content for all rules.",
        "description": "The static content is taken from the memory cache and send in gob format",
        "operationId": "getContent",
        "responses": {
          "200": {
            "description": "A encoding/gob encoded value with all the static content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rule-content": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Read all metrics exposed by this service",
        "description": "Set of metrics provided by insights-operator-utils library providing total number of requests counter, API endpoints response times, and counter of HTTP status code responses. Additionally it is possible to consume all metrics provided by Go runtime. These metrics start with go_ and process_ prefixes.",
        "operationId": "getMetrics",
        "responses": {
          "200": {
            "content": {
              "text/plain": {}
            },
            "description": "Default response containing all metrics in semi-structured text format"
          }
        }
      }
    }
  }
}
